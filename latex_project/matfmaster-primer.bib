@book{WingKinSung,
author = {Wing-Kin Sung},
booktitle = {Algorithms for Next-Generation Sequencing},
pages = {123--146},
year = {2017},
editor = {CRC Press},
language = {english},
hyphenation = {english}
}

@book{DataAlgorithms,
author = {Mahmoud Parsian},
pages = {486--502},
booktitle = {{Data Algorithms: Recipes for Scaling Up with Hadoop and Spark}},
editor = {O’Reilly Media},
year = {2015},
language = {english},
hyphenation = {english}
}

@book{skriptaBio,
	Author = {Students of University of Belgrade, Faculty of Mathematics},
	Numpages = {21},
	Pages = {47--68},
	Title = {Uvod u bioinformatiku - beleške sa predavanja},
	Year = {2018}
}

@book{DefinicijaElixira,
    author = {Dave Thomas},
    ams-subject = {(05C80)},
    fromwhere = {1,IL},
    title = {Programming Elixir 1.3. The Pragmatic Bookshelf},
    year = {2016},
    hyphenation = {english}
    }

@book{ErlangBook,
    Author = {Francesco Cesarini and Simon Thompson},
    Title = {Erlang Programming},
    Subtitle = {A Concurrent Approach to Software Development},
    Publisher = {O'Reilly Media},
    Year = {2009},
    Month = {June},
    hyphenation = {english}
    }
    
@book{bioinformaticsAlg,
	Author = {Phillip Compeau and Pavel Pevzner},
	Number = {2},
	Numpages = {65},
	Pages = {115--180},
	Publisher = {Active Learning Publishers},
	Title = {Bioinformatics Algorithms: An Active Learning Approach},
	Volume = {1},
	URL = {http://bioinformaticsalgorithms.com/},
	Year = {2015}
	}
	
@book{Voterman,
	Author = {Ramana M. Idury and Michael S. Waterman},
	Number = {2},
	Publisher = {Mary Ann Liebert, Inc. Submission Benefits Package},
	Title = {A New Algorithm for DNA Sequence Assembly},
	Volume = {2},
	URL = {https://www.liebertpub.com/doi/10.1089/cmb.1995.2.291},
	Year = {2009},
	Month = {April}
	}

@phdthesis{ErlangBook2,
    Author = {Joe Armstrong},
    Title = {Making reliable distributed systems in the presence
of software errors},
    Publisher = {Sweden, Stockholm, The Royal Institute of Technology},
    Year = {2003},
    hyphenation = {english}
    }


@article{NPcomplexity,
	Abstract = {The Shortest Common Nonsubsequence (SCNS) problem is: Given a finite set L of strings over an alphabet Σ and an integer k\in N, is there a string of length \leq k over \sum that is not a subsequence of any string in L? The SCNS problem is shown to be NP-complete for strings over an alphabet of size \geq 2},
	Author = {Martin Middendorf},
	Journal = {Theoretical Computer Science},
	Pages = {365--369},
	Numpages = {4},
	Title = {The shortest common nonsubsequence problem is NP-complete},
	%Volume = {108},
	Url = {https://www.sciencedirect.com/science/article/pii/030439759390200D},
	Year = {1993},
    hyphenation = {english} 
    }

@article{SequencingCoverage2,
	Abstract = {Sequencing technologies have placed a wide range of genomic analyses within the capabilities of many laboratories. However, sequencing costs often set limits to the amount of sequences that can be generated and, consequently, the biological outcomes that can be achieved from an experimental design. In this Review, we discuss the issue of sequencing depth in the design of next-generation sequencing experiments. We review current guidelines and precedents on the issue of coverage, as well as their underlying considerations, for four major study designs, which include de novo genome sequencing, genome resequencing, transcriptome sequencing and genomic location analyses (for example, chromatin immunoprecipitation followed by sequencing (ChIP–seq) and chromosome conformation capture (3C)).},
	Author = {David Sims, Ian Sudbery, Nicholas E. Ilott,  Andreas Heger, Chris P. Ponting},
	Journal = {Nature Reviews Genetics},
	Pages = {121--132},
	Numpages = {11},
	Title = {Sequencing depth and coverage: key considerations in genomic analyses},
	Volume = {15},
	Url = {https://www.nature.com/articles/nrg3642},
	Year = {2014},
    hyphenation = {english}
    }

@article{wholeGenomeSeq,
	Abstract = {Genome sequencing projects were long confined to biomedical model organisms and required the concerted effort of large consortia. Rapid progress in high-throughput sequencing technology and the simultaneous development of bioinformatic tools have democratized the field. It is now within reach for individual research groups in the eco-evolutionary and conservation community to generate de novo draft genome sequences for any organism of choice. Because of the cost and considerable effort involved in such an endeavour, the important first step is to thoroughly consider whether a genome sequence is necessary for addressing the biological question at hand. Once this decision is taken, a genome project requires careful planning with respect to the organism involved and the intended quality of the genome draft. Here, we briefly review the state of the art within this field and provide a step-by-step introduction to the workflow involved in genome sequencing, assembly and annotation with particular reference to large and complex genomes.},
	Author = {Robert Ekblom and Jochen B W Wolf},
	Journal = {Evolutionary Applications},
	Month = {11},
	Numpages = {9},
	Pages = {1026--1042},
	Title = {A field guide to whole-genome sequencing, assembly and annotation},
	Volume = {7},
	Url = {https://www.ncbi.nlm.nih.gov/pmc/articles/PMC4231593/},
	Year = {2014},
    hyphenation = {english}
	}

@article{ElixirForRubyists,
	Abstract = {},
	Author = {Tute Costa},
	Journal = {Thoughtbot},
	Title = {Elixir for Rubyists},
	Volume = {15},
	Url = {https://thoughtbot.com/blog/elixir-for-rubyists},
	Year = {2016},
    hyphenation = {english}
    }

@article{HistoryOfElixir,
	Abstract = {In 2010, while José Valim was working on improving the Ruby on Rails framework performance on multiple core systems, he found himself getting increasingly frustrated by the experience. He realized that Ruby was not well designed enough to solve concurrency problems, so started to research how other technologies were doing it. He discovered Erlang, and his interest in its VM was piqued enough that he started to write another language, on top of Erlang. This language is Elixir, a dynamic, functional language that makes use of everything the Erlang VM provides and enables higher extensibility with macros and polymorphism, while maintaining compatibility with Erlang’s ecosystem. Besides those advantages, Elixir has a syntax that is “Ruby-ish” and far less disruptive for a modern-day developer than the Erlang version. It’s certainly been a great journey since 2011, and many success stories have emerged from being able to use Erlang modules in Elixir code to boost your applications, such as Nerves, which helps you to build embedded software, and the web framework Phoenix. This language has proven itself to be really good at managing millions of simultaneous connections: in 2015, Phoenix reported managing 2m WebSocket connections, while, in 2017, Discord scaled Elixir to handle 5m concurrent users. Elixir is already used by big companies, such as Pinterest, Moz, and even some banking systems.},
	Author = {Charles Petit},
	Journal = {Coder Stories},
	Title = {A Brief History of Erlang and Elixir},
	Url = {https://www.welcometothejungle.co/en/articles/history-erlang-elixir},
	Year = {2019},
	Month = {January},
    hyphenation = {english}
    }

@article{ABC,
    Abstract={},
    Tittle = {The origins of Python: the ABC language - Rolf Zwart},
    Author = {Rolf Zwart},
	Url = {https://reinout.vanrees.org/weblog/2018/04/25/origin-of-python-abc.html},
	Year = {2018},
	Month = {April},
	hyphenation = {english}
	}

@article{Velvet,
    Abstract={We have developed a new set of algorithms, collectively called “Velvet,” to manipulate de Bruijn graphs for genomic sequence assembly. A de Bruijn graph is a compact representation based on short words (k-mers) that is ideal for high coverage, very short read (25–50 bp) data sets. Applying Velvet to very short reads and paired-ends information only, one can produce contigs of significant length, up to 50-kb N50 length in simulations of prokaryotic data and 3-kb N50 on simulated mammalian BACs. When applied to real Solexa data sets without read pairs, Velvet generated contigs of ∼8 kb in a prokaryote and 2 kb in a mammalian BAC, in close agreement with our simulated results without read-pair information. Velvet represents a new approach to assembly that can leverage very short reads in combination with read pairs to produce useful assemblies.},
    Tittle = {Algorithms for de novo short read assembly using de Bruijn graphs},
    Author = {Daniel R. Zerbino and Ewan Birney},
    Journal = {Genome Research},
	Url = {https://www.ncbi.nlm.nih.gov/pmc/articles/PMC2336801/},
	Year = {2008},
	Month = {May},
	hyphenation = {english}
	}

@online{DNA,
	Title = {What is DNA?},
	Date = {July 16, 2019},
	Url = {https://ghr.nlm.nih.gov/primer/basics/dna}
}

@online{DNA2,
    Author = {David Austin},
	Title = {What is DNA?},
	Date = {March 2011},
	Url = {http://www.ams.org/publicoutreach/feature-column/fcarc-dna-puzzle}
}

@online{SequencingCoverage,
	Title = {Sequencing Coverage},
	Url = {https://www.illumina.com/science/technology/next-generation-sequencing/plan-experiments/coverage.html}
}

@online{OTP,
    Title = {Zvanična stranica programskog jezika Erlang},
	Url = {http://erlang.org}
}
	
@online{Platformatec,
    Title = {Zvanična stranica kompanije Platformatec},
	Url = {http://plataformatec.com.br/}
}

@online{Python,
    Title = {Zvanična stranica programskog jezika Python},
	Url = {https://www.python.org/}
}
	
@online{Haskell,
    Title = {Zvanična stranica programskog jezika Haskell},
	Url = {https://www.haskell.org/}
	}
	
@online{GIT,
    Title = {Adresa za preuzimanje materijala sa github-a},
	Url = {https://github.com/MilenaDukanac/Master-rad}
	}
	
@online{Elixir,
    Title = {Uputstvo za instaliranje Elixir-a},
	Url = {https://elixir-lang.org/install.html}
	}
	
@online{ElixirEditors,
    Title = {What are the best Elixir IDEs/editors?},
	Url = {https://www.slant.co/topics/6921/~elixir-ides-editors}
	}
	
@online{PyCharm,
    Title = {Zvanična stranica \textit{PyCharm}-a},
	Url = {https://www.jetbrains.com/pycharm/promo/?gclid=CjwKCAjw1_PqBRBIEiwA71rmtauyUPbqEGp8akacF4llZAV-AAJQsTXoTZGJOvnGYI16MbbAiY3SJBoCYO8QAvD_BwE}
	}